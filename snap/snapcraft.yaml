---
name: ollama-webui
base: core22
version: '0.1'  # rewritten by adopt-info & `snapcraftctl set-version` below
summary: ChatGPT-Style Web UI Client for Ollama ðŸ¦™
description: |
  The Ollama Web UI consists of two primary components:
  the frontend and the backend (which serves as a reverse proxy,
  handling static frontend files, and additional features).
  Both are set up.
# adopt-info: backend
grade: stable
confinement: devmode
license: MIT
architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]

apps:
  webui:
    command: bin/snap_launcher.sh
    plugs:
      - home
      - removable-media
      - network
      - network-bind
    environment:
      ENV: prod
      SCARF_NO_ANALYTICS: 'true'
      DO_NOT_TRACK: 'true'
  listener:
    command: bin/snap_launcher.sh
    daemon: simple
    install-mode: enable
    restart-condition: on-failure
    plugs:
      - home
      - removable-media
      - network
      - network-bind
    environment:
      ENV: prod
      SCARF_NO_ANALYTICS: 'true'
      DO_NOT_TRACK: 'true'
parts:
  launcher:
    plugin: dump
    source: ./bin
    organize:
      snap_launcher.sh: bin/snap_launcher.sh
  minilm:
    plugin: dump
    source: https://chroma-onnx-models.s3.amazonaws.com/all-MiniLM-L6-v2/onnx.tar.gz
    organize:
      onnx: root/.cache/chroma/onnx_models/all-MiniLM-L6-v2/onnx
  frontend:
    after: [launcher, minilm]
    plugin: nil
    source: .
    source-type: git
    override-build: |
      craftctl default
      npm ci
      npm run build
      cp -r build $CRAFT_PART_INSTALL/frontend
    stage-snaps:
      - node/20/stable
  backend:
    after: [frontend]
    plugin: python
    source: .
    source-type: git
    build-packages:
      - netcat-openbsd
      - python3.10
      - python3.10-venv
      - python3.10-dev
      - git
    stage-packages:
      - python3.10
      - python3.10-venv
      - python3-pip
      - pandoc
      - libavcodec58
      - libavformat58
    python-requirements:
      - backend/requirements.txt
    override-build: |
      craftctl default
      pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu --no-cache-dir
      cp -r backend $CRAFT_PART_INSTALL
  #  override-pull: |
  #    craftctl default
  #    last_committed_tag="$(git describe --tags --abbrev=0)"
  #    last_committed_tag_ver="$(echo ${last_committed_tag} | sed 's/v//')"
  #    snapcraftctl set-version "$(git describe --tags | sed 's/v//')"
  #   override-build: |
  #     go generate ./...
  #     craftctl default
